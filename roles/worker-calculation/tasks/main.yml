- name: Ensure that worker_data volume is present
  docker_volume:
    name: worker_data

- name: Get amount of cpu cores and calculate amount of workers to start
  shell: grep -c ^processor /proc/cpuinfo
  register: cpu_cores

- set_fact:
    worker_instance_count: "{{ cpu_cores.stdout | int }}"

- debug: var=worker_instance_count

- name: Ensure calculation worker containers are started
  docker_container:
    name: "worker-calculation-{{ item }}"
    image: inowas/pymodelling
    state: started
    restart: yes
    volumes:
    - worker_data:/data
    dns_servers:
    - 169.254.1.1
    env:
      RABBITMQ_HOST: "{{ rabbitmq_host }}"
      RABBITMQ_PORT: "{{ rabbitmq_port }}"
      RABBITMQ_VIRTUAL_HOST: "{{ rabbitmq_vhost }}"
      RABBITMQ_USER: "{{ rabbitmq_user }}"
      RABBITMQ_PASSWORD: "{{ rabbitmq_password }}"
      CALCULATION_QUEUE: flopy_calculation_queue
      CALCULATION_FINISHED_QUEUE: flopy_calculation_finished_queue
    command: python -u /pymodelling/inowas.flopy.calculation.server.py /data
  with_sequence: count={{ worker_instance_count }}