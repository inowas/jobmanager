- name: Download consul binary
  get_url:
    url: https://releases.hashicorp.com/consul/{{consul_version}}/consul_{{consul_version}}_linux_amd64.zip
    dest: /tmp
    mode: 0440

- name: Install required packages
  apt:
    update_cache: yes
    name: "{{ item }}"
    state: present
  with_items:
    - unzip
    - dnsmasq

- name: Unarchive a file that is already on the remote machine
  unarchive:
    src: /tmp/consul_{{consul_version}}_linux_amd64.zip
    dest: /usr/local/bin
    remote_src: yes
    mode: 0755

- name: Ensure that config directory for consul is present
  file:
    path: /etc/consul.d
    state: directory

# Retrieve host ip with check with interface returns an ip
# BE CAREFUL! this may not  work if multiple network names are availiable
# -----------------------------------------------------------------------
- set_fact:
    host_ip: "{{hostvars[inventory_hostname]['ansible_enp0s8']['ipv4']['address']}}"
  when: hostvars[inventory_hostname]['ansible_enp0s8'] is defined

- set_fact:
    host_ip: "{{hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address']}}"
  when: hostvars[inventory_hostname]['ansible_eth0'] is defined
# -----------------------------------------------------------------------

- name: Ensure consul interface configuration is copied to host
  template:
    src: interfaces.json.j2
    dest: /etc/consul.d/interfaces.json

- name: Ensure dummy0 network configuration is copied to host
  copy:
    src: "{{ item }}"
    dest: /etc/systemd/network/{{ item }}
  with_items:
    - dummy0.netdev
    - dummy0.network

- name: Ensure systemd-networkd service is restarted
  systemd:
    state: restarted
    name: systemd-networkd

- name: Ensure consul config for dnsmasq is copied to host
  copy:
    src: consul.conf
    dest: /etc/dnsmasq.d/consul.conf

- name: Restart dnsmasq service
  systemd:
    name: dnsmasq
    daemon_reload: yes
    state: restarted

- name: Ensure consul {{consul_agent_type}} start script is copied to host
  template:
    src: consul-{{consul_agent_type}}.service.j2
    dest: /etc/systemd/system/consul-{{consul_agent_type}}.service

- name: Ensure service consul-{{consul_agent_type}}.service is started
  systemd:
    state: started
    daemon_reload: yes
    name: consul-{{consul_agent_type}}.service

- set_fact:
    consul_server_ip: "{{host_ip}}"
  when: consul_agent_type == 'server'

